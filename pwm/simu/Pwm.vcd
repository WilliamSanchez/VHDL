$date
  Thu Oct 23 20:04:55 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module math_real $end
$upscope $end
$scope module pwm_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # pwm_out $end
$var reg 1 $ rst $end
$var reg 25 % cnt[24:0] $end
$var integer 32 & position $end
$var reg 8 ' rom_addr[7:0] $end
$var reg 8 ( rom_data[7:0] $end
$scope module servo $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$var integer 32 + position $end
$var reg 1 , pwm_out $end
$var integer 32 - counter $end
$var integer 32 . duty_cycle $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
U!
U"
U#
U$
bUUUUUUUUUUUUUUUUUUUUUUUUU %
b0 &
bUUUUUUUU '
bUUUUUUUU (
U)
U*
b0 +
U,
b0 -
b0 .
